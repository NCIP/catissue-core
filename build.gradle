import org.apache.tools.ant.filters.ReplaceTokens;
import org.gradle.api.tasks.Exec;
import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'idea'

archivesBaseName = 'openspecimen'

def springVersion = "3.2.13.RELEASE"

Properties props = new Properties()
props.load(new FileInputStream("build.properties"))

def deploymentLocation = props.app_home + "/server/default/deploy"

if(new File(props.app_home + '/webapps').exists()) {
  deploymentLocation = props.app_home + "/webapps"
}

project.ext["plugin_custom_module"]      = props.plugin_custom_module
project.ext["datasource_jndi"]           = props.datasource_jndi
project.ext["deployment_type"]           = props.deployment_type
project.ext["database_type"]             = props.database_type
project.ext["database_host"]             = props.database_host
project.ext["database_port"]             = props.database_port
project.ext["database_name"]             = props.database_name
project.ext["database_username"]         = props.database_username
project.ext["database_password"]         = props.database_password
project.ext["show_sql"]                  = props.show_sql
project.ext["datasource_mysql_dialect"]  = "org.hibernate.dialect.MySQLDialect"
project.ext["datasource_oracle_dialect"] = "org.hibernate.dialect.Oracle10gDialect"
project.ext["mysql_driver"]              = "com.mysql.jdbc.Driver"
project.ext["oracle_driver"]             = "oracle.jdbc.OracleDriver"
project.ext["deploy_location"]           = deploymentLocation

def environment = 'dev';
def envScript;

if (project.hasProperty("env")) {
  environment = env
}
if (environment == 'prod') {
  envScript = file("prod.gradle")
  if (!envScript.exists()) {
    throw new GradleException("Unknown environment: $env")
  }
} else if (environment == 'test') {
  envScript = file("test.gradle")
  if (!envScript.exists()) {
    throw new GradleException("Unknown environment: $env")
  }
} else {
  envScript = file("dev.gradle")
  if (!envScript.exists()) {
    throw new GradleException("Unknown environment: $env")
  }
}

sourceSets {
  main.java.srcDirs = ['WEB-INF/src']
  main.resources.srcDirs = ['WEB-INF/resources']
}

description = "openspecimen"

repositories {
  maven { url "http://repo.maven.apache.org/maven2" }
}

configurations {
  ajc
  aspects
  aspectCompile
  
  compile {
    extendsFrom aspects
  }
}

configurations.all {
  transitive = false
}

dependencies {
  ajc       "org.aspectj:aspectjtools:1.8.6"
  compile   "org.aspectj:aspectjrt:1.8.6"
  compile   "javax.persistence:persistence-api:1.0.2"
  aspects   "org.springframework:spring-aspects:3.2.13.RELEASE"

  compile fileTree(dir: 'lib', include: ['DynamicExtensions.jar'])
  
  providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version:'3.0.1'
  
  compile group: 'org.antlr', name: 'antlr4', version:'4.5.1'
  compile group: 'aopalliance', name: 'aopalliance', version:'1.0'
  compile group: 'asm', name: 'asm', version:'3.3.1'
  compile group: 'org.aspectj', name: 'aspectjweaver', version:'1.8.6'
  compile group: 'cglib', name: 'cglib', version:'3.1'
  compile group: 'commons-beanutils', name: 'commons-beanutils', version:'1.9.2'
  compile group: 'commons-codec', name: 'commons-codec', version:'1.10'
  compile group: 'commons-collections', name: 'commons-collections', version:'3.2.2'
  compile group: 'commons-dbcp', name: 'commons-dbcp', version:'1.4'
  compile group: 'commons-fileupload', name: 'commons-fileupload', version:'1.3.1'
  compile group: 'commons-httpclient', name: 'commons-httpclient', version:'3.1'
  compile group: 'commons-io', name: 'commons-io', version:'2.4'
  compile group: 'commons-lang', name: 'commons-lang', version:'2.6'
  compile group: 'commons-logging', name: 'commons-logging', version:'1.2'
  compile group: 'org.apache.commons', name: 'commons-digester3', version:'3.2'
  compile group: 'org.apache.commons', name: 'commons-lang3', version:'3.4'
  compile group: 'org.apache.tika', name: 'tika-parsers', version: '1.13'
  compile group: 'net.sf.kxml', name: 'kxml2-min', version:'2.3.0'
  compile group: 'net.sf.ehcache', name: 'ehcache', version:'1.2.3'
  compile group: 'net.sf.opencsv', name: 'opencsv', version:'2.3'
  compile group: 'com.google.code.gson', name: 'gson', version:'2.3.1'
  compile group: 'org.hibernate', name: 'hibernate-commons-annotations', version:'3.2.0.Final'
  compile group: 'org.hibernate', name: 'hibernate-core', version:'4.2.18.Final'
  compile group: 'org.hibernate', name: 'hibernate-envers', version:'4.2.18.Final'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version:'2.5.3'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:'2.5.3'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.5.3'
  compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version:'1.9.13'
  compile group: 'org.codehaus.jackson', name: 'jackson-core-asl', version:'1.9.13'
  compile group: 'org.javassist', name: 'javassist', version:'3.19.0-GA'
  compile group: 'com.sun.xml.bind', name: 'jaxb-impl', version:'2.2.11'
  compile group: 'com.sun.xml.bind', name: 'jaxb-libs', version:'1.0.6'
  compile group: 'com.sun.xml.bind', name: 'jaxb-xjc', version:'2.2.11'
  compile group: 'org.jboss.logging', name: 'jboss-logging', version:'3.1.1.GA'
  compile group: 'org.scijava', name: 'jep', version:'2.4.2'
  compile group: 'org.json', name: 'json', version:'20140107'
  compile group: 'javax.ws.rs', name: 'jsr311-api', version:'1.1.1'
  compile group: 'javax.servlet', name: 'jstl', version:'1.2'
  compile group: 'javax.transaction', name: 'jta', version:'1.1'
  compile group: 'javax.mail', name: 'mail', version:'1.4.7'
  compile group: 'org.liquibase', name: 'liquibase-core', version:'3.3.3'
  compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.12'
  compile group: 'log4j', name: 'log4j', version:'1.2.16'
  compile group: 'quartz', name: 'quartz', version:'1.5.2'
  compile group: 'org.springframework', name: 'spring-aop', version:springVersion
  compile group: 'org.springframework', name: 'spring-beans', version:springVersion
  compile group: 'org.springframework', name: 'spring-context', version:springVersion
  compile group: 'org.springframework', name: 'spring-context-support', version:'3.1.2.RELEASE'
  compile group: 'org.springframework', name: 'spring-core', version:springVersion
  compile group: 'org.springframework', name: 'spring-expression', version:springVersion
  compile group: 'org.springframework', name: 'spring-instrument', version:springVersion
  compile group: 'org.springframework', name: 'spring-jdbc', version:springVersion
  compile group: 'org.springframework', name: 'spring-tx', version:springVersion
  compile group: 'org.springframework', name: 'spring-web', version:springVersion
  compile group: 'org.springframework', name: 'spring-webmvc', version:springVersion
  compile group: 'org.springframework', name: 'spring-orm', version:springVersion
  compile group: 'org.springframework.ldap', name: 'spring-ldap-core', version:'2.0.3.RELEASE'
  compile group: 'org.springframework.security', name: 'spring-security-config', version:'3.2.7.RELEASE'
  compile group: 'org.springframework.security', name: 'spring-security-core', version:'3.2.7.RELEASE'
  compile group: 'org.springframework.security', name: 'spring-security-ldap', version:'3.2.7.RELEASE'
  compile group: 'org.springframework.security', name: 'spring-security-web', version:'3.2.7.RELEASE'
  compile group: 'velocity', name: 'velocity-dep', version:'1.4'
  compile group: 'com.thoughtworks.xstream', name: 'xstream', version:'1.4.8'
  compile group: 'com.itextpdf', name: 'itextpdf', version:'5.5.6'
  compile group: 'dom4j', name: 'dom4j', version: '1.6.1'

  //SAML dependencies lib
  compile group: 'org.springframework.security.extensions', name: 'spring-security-saml2-core', version:'1.0.0.RELEASE'
  compile group: 'org.opensaml', name: 'opensaml', version: '2.6.1'
  compile group: 'org.opensaml', name: 'openws', version: '1.5.4'
  compile group: 'org.opensaml', name: 'xmltooling', version: '1.3.1'
  compile group: 'xml-security', name: 'xmlsec', version: '1.3.0'
  compile group: 'xml-apis', name: 'xml-apis', version: '1.4.01'
  compile group: 'org.owasp.esapi', name: 'esapi', version: '2.1.0'
  compile group: 'xerces', name: 'xercesImpl', version: '2.11.0'
  compile group: 'xalan', name: 'xalan', version: '2.7.2'
  compile group: 'xalan', name: 'serializer', version: '2.7.2'
  compile group: 'org.bouncycastle', name: 'bcprov-jdk15', version: '1.46'
  compile group: 'joda-time', name: 'joda-time', version: '2.1'
  compile group: 'org.apache.velocity', name: 'velocity', version:'1.7'
  compile group: 'ca.juliusdavies', name: 'not-yet-commons-ssl', version: '0.3.9'

  runtime group: 'antlr', name: 'antlr', version: '2.7.7'
  runtime group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.12'
  
  testCompile group: 'junit', name: 'junit', version:'4.11'
}

compileJava {
  doLast{
    ant.taskdef(resource: "org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties", 
                classpath: configurations.ajc.asPath)
      
    ant.iajc(
      source: 1.8,
      target: 1.8,
      destDir: sourceSets.main.output.classesDir.absolutePath, 
      maxmem: "512m", 
      fork: "true",
      aspectPath: configurations.aspects.asPath,  
      sourceRootCopyFilter: "**/*.java",
      classpath: "${configurations.compile.asPath};${configurations.aspectCompile.asPath}"){
      sourceroots{
        sourceSets.main.java.srcDirs.each{
          pathelement(location:it.absolutePath)
        }
      }
    }
  }
}

def getTodayDate() {
  def today = new Date()
  return String.valueOf(today.getTime())
}

def getCommitRevision() {
  def revCmd = "git rev-parse --short HEAD"
  def revision = revCmd.execute()
  return revision.text.trim()
}

def getBranch() {
  def branchCmd = "git symbolic-ref -q --short HEAD";
  def branch = branchCmd.execute().text.trim();

  if (branch.length() == 0) {
    branchCmd = "git describe --tags --exact-match";
    branch = branchCmd.execute().text.trim();
  }
  return branch;
}

processResources {
  from(sourceSets.main.resources.srcDirs) {
    include 'application.properties'
    
    def datasource_dialect = (database_type == "mysql") ? datasource_mysql_dialect : datasource_oracle_dialect
    filter(
      ReplaceTokens, 
      tokens: [
        datasource_jndi: datasource_jndi, 
        datasource_type: deployment_type,
        datasource_dialect: datasource_dialect,
        database_type: database_type,
        app_data_dir: props.app_data_dir,
        app_log_conf: props.app_log_conf,
        plugin_dir: props.plugin_dir,
        show_sql: show_sql,
        buildinfo_version : getBranch(),
        buildinfo_date : getTodayDate(),
        buildinfo_commit_revision : getCommitRevision()])
  }
}

task unzip_de(type: Copy) {
  def zipFile = file('./dynamicextensions.zip')
  def outputDir = file("${buildDir}/detemp")
  
  from zipTree(zipFile) 
  into outputDir
}

task create_war(type: War) {
  from ('./') {
    include 'ngweb/**'
  }
  
  from ('./www/dist/') {
    include '**/**'
  }
  
  from ('./WEB-INF/') {
    include 'resources/**'
    include 'applicationContext.xml'
    include 'restApiContext.xml'
    include 'pluginUiContext.xml'
    include 'migrationContext.xml'
    include 'web.xml'
    
    into 'WEB-INF/'
  }
  
  from ('./build/detemp/') {
    include 'csd_web/**'
  }
  
  from ('./build/detemp/ngweb/') {
    include 'css/**'
    include 'js/**'
    
    into '/ngweb/external/de'
  }

  manifest {
    attributes(
      "Implementation-Title": archivesBaseName,
      "Implementation-Version": getBranch(),
      "Implementation-Timestamp": new Date()
    )
  }
}

def grunt_cmd = "grunt"

if (Os.isFamily(Os.FAMILY_WINDOWS)) {
  grunt_cmd = "grunt.cmd"
}

task grunt_build(type: Exec) {
  workingDir './www'
  commandLine grunt_cmd, 'build'
}

create_war.dependsOn unzip_de, grunt_build
build.dependsOn create_war

apply from: envScript
