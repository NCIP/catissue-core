<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
  <class name="com.krishagni.catissueplus.core.biospecimen.domain.SpecimenList" table="CATISSUE_SPECIMENLIST_TAGS">

    <id name="id" column="IDENTIFIER">
      <generator class="native">
        <param name="sequence">CATISSUE_SPECIMEN_LIST_SEQ</param>
      </generator>
    </id>

    <property name="name" column="TAG_LABEL"/>

    <property name="description" column="DESCRIPTION"/>

    <property name="createdOn" column="CREATED_ON"/>

    <property name="lastUpdatedOn" column="LAST_UPDATED_ON"/>

    <many-to-one name="owner" column="USER_ID"/>
     
    <set name="sharedWith" table="SHARED_SPECIMENLIST_TAGS">
      <key column="TAG_ID"/>
      <many-to-many class="com.krishagni.catissueplus.core.administrative.domain.User" column="USER_ID"/>
    </set>
	
    <set name="specimens" table="CATISSUE_SPEC_TAG_ITEMS">
      <key column="TAG_ID"/>
      <many-to-many class="com.krishagni.catissueplus.core.biospecimen.domain.Specimen" column="OBJ_ID">
        <filter name="activeEntity"/>
      </many-to-many>
    </set>
    
    <property name="deletedOn" column="DELETED_ON"/>
    
    <query name="getSpecimenListByName">
      from SpecimenList l where l.name = :name
    </query>
    
    <query name="getListSpecimensCount">
      select 
        l.id, count(s.id)
      from
        SpecimenList l inner join l.specimens s
      where 
        l.id in (:listIds)
      group by
        l.id
    </query>

    <query name="getListCpSpecimens">
      select
        cp.id, s
      from
        SpecimenList l
        join l.specimens s
        join s.visit v
        join v.registration cpr
        join cpr.collectionProtocol cp
      where
        l.id = :listId and
        l.deletedOn is null
    </query>

    <query name="getListSpecimensCpIds">
      select
        distinct cp.id
      from
        SpecimenList l
        join l.specimens s
        join s.visit v
        join v.registration cpr
        join cpr.collectionProtocol cp
      where
        l.id = :listId and
        l.deletedOn is null
    </query>
  </class>
</hibernate-mapping>
